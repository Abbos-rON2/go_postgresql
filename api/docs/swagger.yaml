basePath: /
definitions:
  models.CreateUser:
    properties:
      address:
        type: string
      birth_date:
        type: string
      first_name:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        enum:
        - super_admin
        - ' branch_admin'
        type: string
      username:
        type: string
    type: object
  models.ErrorModel:
    properties:
      code:
        type: string
      error:
        type: object
      message:
        type: string
    type: object
  models.LoginModel:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.SuccessModel:
    properties:
      code:
        type: string
      data:
        type: object
      message:
        type: string
    type: object
  models.Teacher:
    properties:
      address:
        type: string
      birth_date:
        type: string
      branch_id:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      guid:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      salary:
        type: number
      updated_at:
        type: string
    type: object
  models.UpdateTeacher:
    properties:
      address:
        type: string
      birth_date:
        type: string
      branch_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      salary:
        type: number
    type: object
  models.User:
    properties:
      birth_date:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        enum:
        - super_admin
        - ' branch_admin'
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license: {}
  title: Test Task
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginModel'
      produces:
      - application/json
      responses:
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: login
      tags:
      - user
  /teacher:
    get:
      consumes:
      - application/json
      description: get all teachers
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessModel'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Teacher'
                  type: array
              type: object
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: get all teachers
      tags:
      - teacher
    post:
      consumes:
      - application/json
      description: create teacher
      parameters:
      - description: teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Teacher'
              type: object
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: create teacher
      tags:
      - teacher
  /teacher/{guid}:
    delete:
      consumes:
      - application/json
      description: delete teacher
      parameters:
      - description: guid
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessModel'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: delete teacher
      tags:
      - teacher
    get:
      consumes:
      - application/json
      description: get teacher
      parameters:
      - description: guid
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Teacher'
              type: object
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: get teacher
      tags:
      - teacher
    put:
      consumes:
      - application/json
      description: update teacher
      parameters:
      - description: teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTeacher'
      - description: guid
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Teacher'
              type: object
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: update teacher
      tags:
      - teacher
  /user:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessModel'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create user
      tags:
      - user
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user
      tags:
      - User
swagger: "2.0"
