basePath: /api
definitions:
  models.CreateUser:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.UpdateUser:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
  models.User:
    properties:
      age:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Test Task
  version: "1.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: entity
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user
      tags:
      - User
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
